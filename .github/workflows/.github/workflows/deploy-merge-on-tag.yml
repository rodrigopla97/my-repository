name: DEPLOY tag → merge dev → main

on:
  push:
    tags:
      - 'DEPLOY-*'   # disparará con tags tipo DEPLOY-1.2.3 o DEPLOY-v1.2.3

permissions:
  contents: write
  pull-requests: write

jobs:
  merge-on-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Leer versión desde el tag
        id: version
        run: |
          RAW="${GITHUB_REF_NAME}"              # p.ej. DEPLOY-1.2.3
          VERSION="${RAW#DEPLOY-}"             # p.ej. 1.2.3
          # Acepta 1.2.3 o v1.2.3 (+ sufijos prerelease/build)
          if ! [[ "$VERSION" =~ ^v?[0-9]+(\.[0-9]+){2}([\-+][0-9A-Za-z\.-]+)?$ ]]; then
            echo "El tag '$RAW' no contiene una versión semántica válida. Usa DEPLOY-1.2.3"
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Merge development → main
        run: |
          set -e
          git fetch origin
          git checkout main

          # Intentar fast-forward limpio primero
          if git merge --ff-only origin/development; then
            echo "FF ok (development estaba por delante de main)."
          else
            echo "No es posible FF. Intentando merge normal..."
            git merge --no-ff origin/development -m "DEPLOY ${VERSION}: merge development → main"
          fi

          git push origin HEAD:main
